version: "3.8"

services:

  nginx:
    build: ./nginx
    container_name: nginx
    ports:
      - "1337:80"
      - "443:443"
#    volumes:
#      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend


  backend:
    build: .
    container_name: ssb-backend
#    command: python ./src/manage.py runserver 0.0.0.0:8000
#    command: ./commands/wsgi_dev.sh
    command: make ${RUN_COMMAND}
    tty: true
    stdin_open: true
    restart: always
    ports:
    - "8001:8000"
    - "9000:9000"
    - "587:587"
    expose:
      - 587
    volumes:
      - ./:/srv/project
    depends_on:
      - memcached
      - rabbitmq
      - postgres
    env_file: .env

  memcached:
    image: memcached:1.6.9
    container_name: memcached
    tty: true
    stdin_open: true
    restart: always


  rabbitmq:
    image: rabbitmq:3.8-rc-management
    container_name: rabbitmq
    tty: true
    stdin_open: true
    restart: always
    env_file: .env
    ports:
      - "15672:15672"

  celery:
    build: .
    container_name: celery
    command: make celery-run
    restart: always
    env_file: .env
    depends_on:
      - rabbitmq
    volumes:
      - ./:/srv/project

  celerybeat:
    build: .
    container_name: celerybeat
    command: make celerybeat-run
    restart: always
    env_file: .env
    depends_on:
      - rabbitmq
    volumes:
      - ./:/srv/project

  postgres:
    image: library/postgres:12-alpine
    container_name: ssb-db
    tty: true
    stdin_open: true
    restart: always
    env_file: .env
    ports:
      - "5432:5432"
    volumes:
    - db_data:/var/lib/postgresql/data


volumes:
  db_data: